{"ast":null,"code":"import { FETCH_PRODUCTS } from './actionTypes';\nimport axios from 'axios';\nimport { productsAPI } from '../util';\nvar compare = {\n  lowestprice: function lowestprice(a, b) {\n    if (a.price < b.price) return -1;\n    if (a.price > b.price) return 1;\n    return 0;\n  },\n  highestprice: function highestprice(a, b) {\n    if (a.price > b.price) return -1;\n    if (a.price < b.price) return 1;\n    return 0;\n  }\n};\nexport var fetchProducts = function fetchProducts(filters, sortBy, callback) {\n  return function (dispatch) {\n    return axios.get(productsAPI).then(function (res) {\n      var products = res.data.products;\n\n      if (!!filters && filters.length > 0) {\n        products = products.filter(function (p) {\n          return filters.find(function (f) {\n            return p.availableSizes.find(function (size) {\n              return size === f;\n            });\n          });\n        });\n      }\n\n      if (!!sortBy) {\n        products = products.sort(compare[sortBy]);\n      }\n\n      if (!!callback) {\n        callback();\n      }\n\n      return dispatch({\n        type: FETCH_PRODUCTS,\n        payload: products\n      });\n    }).catch(function (err) {\n      console.log('Could not fetch products. Try again later.');\n    });\n  };\n};","map":{"version":3,"sources":["C:\\Users\\zaper\\week_2_unmodified\\src\\services\\shelf\\actions.js"],"names":["FETCH_PRODUCTS","axios","productsAPI","compare","lowestprice","a","b","price","highestprice","fetchProducts","filters","sortBy","callback","dispatch","get","then","res","products","data","length","filter","p","find","f","availableSizes","size","sort","type","payload","catch","err","console","log"],"mappings":"AAAA,SAASA,cAAT,QAA+B,eAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,WAAT,QAA4B,SAA5B;AAEA,IAAMC,OAAO,GAAG;AACdC,EAAAA,WAAW,EAAE,qBAACC,CAAD,EAAIC,CAAJ,EAAU;AACrB,QAAID,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAhB,EAAuB,OAAO,CAAC,CAAR;AACvB,QAAIF,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAhB,EAAuB,OAAO,CAAP;AACvB,WAAO,CAAP;AACD,GALa;AAMdC,EAAAA,YAAY,EAAE,sBAACH,CAAD,EAAIC,CAAJ,EAAU;AACtB,QAAID,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAhB,EAAuB,OAAO,CAAC,CAAR;AACvB,QAAIF,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAhB,EAAuB,OAAO,CAAP;AACvB,WAAO,CAAP;AACD;AAVa,CAAhB;AAaA,OAAO,IAAME,aAAa,GAAG,SAAhBA,aAAgB,CAACC,OAAD,EAAUC,MAAV,EAAkBC,QAAlB;AAAA,SAA+B,UAAAC,QAAQ,EAAI;AACtE,WAAOZ,KAAK,CACTa,GADI,CACAZ,WADA,EAEJa,IAFI,CAEC,UAAAC,GAAG,EAAI;AAAA,UACLC,QADK,GACQD,GAAG,CAACE,IADZ,CACLD,QADK;;AAGX,UAAI,CAAC,CAACP,OAAF,IAAaA,OAAO,CAACS,MAAR,GAAiB,CAAlC,EAAqC;AACnCF,QAAAA,QAAQ,GAAGA,QAAQ,CAACG,MAAT,CAAgB,UAAAC,CAAC;AAAA,iBAC1BX,OAAO,CAACY,IAAR,CAAa,UAAAC,CAAC;AAAA,mBAAIF,CAAC,CAACG,cAAF,CAAiBF,IAAjB,CAAsB,UAAAG,IAAI;AAAA,qBAAIA,IAAI,KAAKF,CAAb;AAAA,aAA1B,CAAJ;AAAA,WAAd,CAD0B;AAAA,SAAjB,CAAX;AAGD;;AAED,UAAI,CAAC,CAACZ,MAAN,EAAc;AACZM,QAAAA,QAAQ,GAAGA,QAAQ,CAACS,IAAT,CAAcvB,OAAO,CAACQ,MAAD,CAArB,CAAX;AACD;;AAED,UAAI,CAAC,CAACC,QAAN,EAAgB;AACdA,QAAAA,QAAQ;AACT;;AAED,aAAOC,QAAQ,CAAC;AACdc,QAAAA,IAAI,EAAE3B,cADQ;AAEd4B,QAAAA,OAAO,EAAEX;AAFK,OAAD,CAAf;AAID,KAvBI,EAwBJY,KAxBI,CAwBE,UAAAC,GAAG,EAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,4CAAZ;AACD,KA1BI,CAAP;AA2BD,GA5B4B;AAAA,CAAtB","sourcesContent":["import { FETCH_PRODUCTS } from './actionTypes';\nimport axios from 'axios';\n\nimport { productsAPI } from '../util';\n\nconst compare = {\n  lowestprice: (a, b) => {\n    if (a.price < b.price) return -1;\n    if (a.price > b.price) return 1;\n    return 0;\n  },\n  highestprice: (a, b) => {\n    if (a.price > b.price) return -1;\n    if (a.price < b.price) return 1;\n    return 0;\n  }\n};\n\nexport const fetchProducts = (filters, sortBy, callback) => dispatch => {\n  return axios\n    .get(productsAPI)\n    .then(res => {\n      let { products } = res.data;\n\n      if (!!filters && filters.length > 0) {\n        products = products.filter(p =>\n          filters.find(f => p.availableSizes.find(size => size === f))\n        );\n      }\n\n      if (!!sortBy) {\n        products = products.sort(compare[sortBy]);\n      }\n\n      if (!!callback) {\n        callback();\n      }\n\n      return dispatch({\n        type: FETCH_PRODUCTS,\n        payload: products\n      });\n    })\n    .catch(err => {\n      console.log('Could not fetch products. Try again later.');\n    });\n};\n"]},"metadata":{},"sourceType":"module"}