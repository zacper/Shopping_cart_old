{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\zaper\\\\week_2_unmodified\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zaper\\\\week_2_unmodified\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\zaper\\\\week_2_unmodified\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\zaper\\\\week_2_unmodified\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\zaper\\\\week_2_unmodified\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\zaper\\\\week_2_unmodified\\\\src\\\\components\\\\Shelf\\\\Filter\\\\index.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { updateFilters } from '../../../services/filters/actions';\nimport Checkbox from '../../Checkbox';\nimport GithubStarButton from '../../github/StarButton';\nimport './style.scss';\nvar availableSizes = ['XS', 'S', 'M', 'ML', 'L', 'XL', 'XXL'];\n\nvar Filter =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Filter, _Component);\n\n  function Filter() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Filter);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Filter)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.toggleCheckbox = function (label) {\n      if (_this.selectedCheckboxes.has(label)) {\n        _this.selectedCheckboxes.delete(label);\n      } else {\n        _this.selectedCheckboxes.add(label);\n      }\n\n      _this.props.updateFilters(Array.from(_this.selectedCheckboxes));\n    };\n\n    _this.createCheckbox = function (label) {\n      return React.createElement(Checkbox, {\n        classes: \"filters-available-size\",\n        label: label,\n        handleCheckboxChange: _this.toggleCheckbox,\n        key: label,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      });\n    };\n\n    _this.createCheckboxes = function () {\n      return availableSizes.map(_this.createCheckbox);\n    };\n\n    return _this;\n  }\n\n  _createClass(Filter, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.selectedCheckboxes = new Set();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"filters\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Sizes:\"), this.createCheckboxes(), React.createElement(GithubStarButton, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Filter;\n}(Component);\n\nFilter.propTypes = {\n  updateFilters: PropTypes.func.isRequired,\n  filters: PropTypes.array\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    filters: state.filters.items\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateFilters: updateFilters\n})(Filter);","map":{"version":3,"sources":["C:\\Users\\zaper\\week_2_unmodified\\src\\components\\Shelf\\Filter\\index.js"],"names":["React","Component","PropTypes","connect","updateFilters","Checkbox","GithubStarButton","availableSizes","Filter","toggleCheckbox","label","selectedCheckboxes","has","delete","add","props","Array","from","createCheckbox","createCheckboxes","map","Set","propTypes","func","isRequired","filters","array","mapStateToProps","state","items"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,mCAA9B;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;AAEA,OAAO,cAAP;AAEA,IAAMC,cAAc,GAAG,CAAC,IAAD,EAAO,GAAP,EAAY,GAAZ,EAAiB,IAAjB,EAAuB,GAAvB,EAA4B,IAA5B,EAAkC,KAAlC,CAAvB;;IAEMC,M;;;;;;;;;;;;;;;;;;UAUJC,c,GAAiB,UAAAC,KAAK,EAAI;AACxB,UAAI,MAAKC,kBAAL,CAAwBC,GAAxB,CAA4BF,KAA5B,CAAJ,EAAwC;AACtC,cAAKC,kBAAL,CAAwBE,MAAxB,CAA+BH,KAA/B;AACD,OAFD,MAEO;AACL,cAAKC,kBAAL,CAAwBG,GAAxB,CAA4BJ,KAA5B;AACD;;AAED,YAAKK,KAAL,CAAWX,aAAX,CAAyBY,KAAK,CAACC,IAAN,CAAW,MAAKN,kBAAhB,CAAzB;AACD,K;;UAEDO,c,GAAiB,UAAAR,KAAK;AAAA,aACpB,oBAAC,QAAD;AACE,QAAA,OAAO,EAAC,wBADV;AAEE,QAAA,KAAK,EAAEA,KAFT;AAGE,QAAA,oBAAoB,EAAE,MAAKD,cAH7B;AAIE,QAAA,GAAG,EAAEC,KAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADoB;AAAA,K;;UAStBS,gB,GAAmB;AAAA,aAAMZ,cAAc,CAACa,GAAf,CAAmB,MAAKF,cAAxB,CAAN;AAAA,K;;;;;;;wCAvBC;AAClB,WAAKP,kBAAL,GAA0B,IAAIU,GAAJ,EAA1B;AACD;;;6BAuBQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEG,KAAKF,gBAAL,EAFH,EAGE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CADF;AAOD;;;;EAvCkBlB,S;;AAAfO,M,CACGc,S,GAAY;AACjBlB,EAAAA,aAAa,EAAEF,SAAS,CAACqB,IAAV,CAAeC,UADb;AAEjBC,EAAAA,OAAO,EAAEvB,SAAS,CAACwB;AAFF,C;;AAyCrB,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCH,IAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,CAAcI;AADS,GAAL;AAAA,CAA7B;;AAIA,eAAe1B,OAAO,CACpBwB,eADoB,EAEpB;AAAEvB,EAAAA,aAAa,EAAbA;AAAF,CAFoB,CAAP,CAGbI,MAHa,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { updateFilters } from '../../../services/filters/actions';\nimport Checkbox from '../../Checkbox';\nimport GithubStarButton from '../../github/StarButton';\n\nimport './style.scss';\n\nconst availableSizes = ['XS', 'S', 'M', 'ML', 'L', 'XL', 'XXL'];\n\nclass Filter extends Component {\n  static propTypes = {\n    updateFilters: PropTypes.func.isRequired,\n    filters: PropTypes.array\n  };\n\n  componentDidMount() {\n    this.selectedCheckboxes = new Set();\n  }\n\n  toggleCheckbox = label => {\n    if (this.selectedCheckboxes.has(label)) {\n      this.selectedCheckboxes.delete(label);\n    } else {\n      this.selectedCheckboxes.add(label);\n    }\n\n    this.props.updateFilters(Array.from(this.selectedCheckboxes));\n  };\n\n  createCheckbox = label => (\n    <Checkbox\n      classes=\"filters-available-size\"\n      label={label}\n      handleCheckboxChange={this.toggleCheckbox}\n      key={label}\n    />\n  );\n\n  createCheckboxes = () => availableSizes.map(this.createCheckbox);\n\n  render() {\n    return (\n      <div className=\"filters\">\n        <h4 className=\"title\">Sizes:</h4>\n        {this.createCheckboxes()}\n        <GithubStarButton />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  filters: state.filters.items\n});\n\nexport default connect(\n  mapStateToProps,\n  { updateFilters }\n)(Filter);\n"]},"metadata":{},"sourceType":"module"}